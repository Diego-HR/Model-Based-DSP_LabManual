#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
\usepackage[numbered,framed]{matlab-prettifier}
\lstset{style=Matlab-editor}
\end_preamble
\use_default_options true
\begin_modules
tcolorbox
\end_modules
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1.54in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
topskip0pt
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Part
Marco metodológico.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Filtrado básico de señales - Introducción práctica a Sysgen.
\end_layout

\begin_layout Subsection
Diseño de un filtro FIR pasabajas para la eliminación de ruido en una señal
 senoidal.
\end_layout

\begin_layout Standard
Una de las aplicaciones más comunes en el mundo del procesamiento digital
 de señales, es la eliminación de componentes no deseadas que, por algún
 fenómeno físico, distorsionan la información de la señal en la cual estamos
 interesados.
 
\end_layout

\begin_layout Standard
A manera de introducción, se utilizará el ambiente de Matlab/Simulink con
 el toolbox de Sysgen para diseñar un sistema que elimine una componente
 senoidal de alta frecuencia mezclada a una componente senoidal base, mediante
 el uso de un filtro FIR pasabajas ejecutándose en el kit Atlys.
\end_layout

\begin_layout Subsection
Especificaciones del modelo del filtro FIR en Matlab.
\end_layout

\begin_layout Standard
Existe una señal de entrada a nuestro sistema 
\begin_inset Formula $F_{DSP}$
\end_inset

 cuya entrada está representada por la suma de dos señales senoidales de
 
\begin_inset Formula $f_{senBase}=1KHz$
\end_inset

 y 
\begin_inset Formula $5KHz\leq f_{senRuido}\leq15KHz$
\end_inset

 con una amplitud de 1 y 0.5 respectivamente, esta suma de señales representará
 el fenómeno no deseado.
 
\end_layout

\begin_layout Standard
El sistema 
\begin_inset Formula $F_{DSP}$
\end_inset

 debe ser capáz de eliminar señales por encima de 
\begin_inset Formula $f_{corte}=7KHz$
\end_inset

, por lo que el tipo de filtro a implementar debe ser 
\emph on
paso bajo.
 
\emph default
Además, la frecuencia de muestreo del sistema debe ser de 
\begin_inset Formula $F_{s}=48KHz$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
En primer lugar, es necesario desarollar la función de las señales 
\begin_inset Formula $f_{senBase}$
\end_inset

 y 
\begin_inset Formula $f_{senRuido}$
\end_inset

 para utilizarlas para ejercitar el filtro FIR, utilizando el script de
 Matlab que se muestra en el Algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Generación-de-la"

\end_inset

, y el resultado de la función se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfica-derivada-de"

\end_inset

.
\begin_inset Float algorithm
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/diego/Documents/Finalized/examples/noise_removal/senmix.m"
lstparams "style={Matlab-editor},basicstyle={\\mlttfamily\\scriptsize}"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Generación de la señal de excitación al sistema 
\begin_inset Formula $F_{DSP}.$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "alg:Generación-de-la"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/fft_example1.eps
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Gráfica derivada de la función diseñada en Matlab para este ejercicio.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfica-derivada-de"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Para el diseño del filtro FIR, se usará el método por ventana de Hamming
 por la facilidad de implementación discutida en la 
\series bold
sección 3.2.2
\series default
 de este documento.
 La ecuación del filtro por ventana de Hamming queda como sigue:
\begin_inset Formula 
\begin{equation}
W=0.54-0.46*cos(2\pi t/T)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
y=x(t)*W(t)
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Para efecto de simplificar la implementación y demostrar la versatilidad
 de los lenguajes de alto nivel, se utilizará la funcion 
\series bold
fir1(n, Wn)
\series default
 incluida en el 
\emph on
Signal Processing Toolbox
\emph default
 de Matlab, donde 
\series bold
n 
\series default
es el órden del filtro y 
\series bold
Wn 
\series default
es un elemento entre 0 y 1 correspoindiente a la frequencia de Nyquist.
 Para calcular el valor de 
\series bold
Wn
\series default
, necesitamos normalizar la frecuencia de corte para cumplir con el teorema
 de muestreo discutido en la sección 
\series bold
3.1.1 
\series default
mediante el uso de las siguientes fórmulas
\series bold
:
\series default

\begin_inset Formula 
\begin{equation}
F_{Nyquist}=\frac{F_{s}}{2}=\frac{48*10^{3}}{2}=24*10^{3}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
Wn=F_{corteNormalizada}=\frac{f_{s}}{F_{Nyquist}}=\frac{7*10^{3}}{24*10^{3}}=0.2917
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Por lo tanto, el diseño final del filtro queda como se muestra en el Algoritmo
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Implementación-del-filtro"

\end_inset

 y la gráfica de la respuesta en magnitud se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Respuesta-en-magnitud"

\end_inset

 
\begin_inset Float algorithm
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/diego/Documents/Finalized/examples/noise_removal/firm_imp.m"
lstparams "style={Matlab-editor},basicstyle={\\mlttfamily\\scriptsize}"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Implementación del filtro FIR.
 
\begin_inset CommandInset label
LatexCommand label
name "alg:Implementación-del-filtro"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/fir_example_analysis.eps
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Respuesta en magnitud del filtro FIR diseñado, donde se puede observar la
 atenuación de frecuencias mayores a 
\begin_inset Formula $f_{c}$
\end_inset

= 7KHz.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Respuesta-en-magnitud"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Por último, para confirmar que el diseño se ha implementado de una manera
 correcta, aplicamos la señal generada en el 
\series bold
paso 1 
\series default
al fltro que acabamos de desarrollar, la respuesta estricta debe ser una
 señal senoidal sin alguna componente por encima de la 
\begin_inset Formula $f_{c}=7KHz$
\end_inset

, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Resultado-de-la"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/filtdesi.eps
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultado de la implementación del filtro FIR, donde se puede observar la
 señal resultante, de un color más oscuro, en oposición a la senal contaminada.
 La señal resultante está totalmente reconstruida, lo que valida la implementaci
ón.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Resultado-de-la"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Simulación del sistema en Sysgen.
\end_layout

\begin_layout Standard
Las instrucciones para transformar el algoritmo que hemos diseñado ya, a
 un modelo que se pueda ejecutar en la tarjeta de desarrollo Atlys, se muestran
 a continuación:
\end_layout

\begin_layout Enumerate
Para ejecutar Sysgen, no se abre Matlab directamente puesto que el toolbox
 de Xilinx no aparecerá en las librerías de Simulink.
 La forma de hacerlo es ir a la barra de 
\series bold
Inicio > Todos los programas > Xilinx Design Tools > ISE > System Generator
\series default
.
 Esto invocará a Sysgen con el toolbox habilitado con la leyenda mostrada
 en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mensaje-de-instalación"

\end_inset

.
 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/sysgen_installed.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mensaje de instalación del toolbox de Sysgen en Matlab R2013a.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Mensaje-de-instalación"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
Dar clic en el ícono 
\begin_inset Graphics
	filename img/simulink_icon.png
	scale 40

\end_inset

 posicionado en la barra superior de la interfáz de Matlab, esto abrirá
 una ventana con los toolboxes de Simulink disponibles en la instalación.
 Los toolboxes de Xilinx se encuentran listados en la pestaña de 
\series bold
Bibliotecas
\series default
 con los nombres de 
\series bold
'Xilinx Blockset', 'Xilinx Reference Blockset' 
\series default
y 
\series bold
'Xilinx XtremeDSP Kit'
\series default
.
 
\end_layout

\begin_layout Enumerate
Crear un nuevo modelo seleccionando el ícono 
\emph on
'New model' 
\emph default
o presionando CTRL+N.
\end_layout

\begin_layout Enumerate
Dentro de esta nueva ventana, el primer paso que siempre se debe realizar
 es agregar el 
\emph on
'Sysgen token' 
\emph default
desde 
\series bold
Xilinx Blockset > Basic Elements
\series default
, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Instanciación-del-System"

\end_inset

.
 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/sysgen_token_example.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Instanciación del System Generator token.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Instanciación-del-System"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Aquí es necesario resaltar algunas reglas importantes para hacer uso del
 toolbox de Xilinx.
 La primera es que, en todo diseño de Simulink donde se involucren bloques
 de Xilinx, debe existir el 
\emph on
'Sysgen token'
\emph default
, este es un bloque especial que no tiene entrada o salida alguna, pero
 es la interface que convierte los vectores de simulación de Matlab a datos
 que la FPGA pueda comprender.
 Además, este bloque contiene la información del proyecto que estamos modelando,
 es decir, aquí se puede definir como el diseño va a ser transformado acorde
 a los flujos discutidos en la 
\series bold
sección
\series default
 
\series bold
5.5.2
\series default
.
\end_layout

\end_deeper
\begin_layout Enumerate
Al dar doble clic sobre el 
\emph on
'Sysgen token' 
\emph default
se abrirá una ventana donde podremos definir los parámetros de implementación,
 los cuales definiremos como los que se muestran a continuación:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Compilation: 
\series default
Hardware Co-Simulation > Atlys > JTAG.
\end_layout

\begin_layout Itemize

\series bold
Synthesis tool: 
\series default
XST.
\end_layout

\begin_layout Itemize

\series bold
Hardware Description Language: 
\series default
Verilog.
\end_layout

\begin_layout Itemize

\series bold
Project type: 
\series default
PlanAhead.
\end_layout

\begin_layout Itemize

\series bold
Synthesis strategy: 
\series default
PlanAhead Defaults.
\end_layout

\begin_layout Itemize

\series bold
Implementation Strategy: 
\series default
ISE Defaults.
\end_layout

\begin_layout Itemize

\series bold
Clocking > Simulink system period: 
\series default
2.0833e-05 (1/48e3), este parámetro es el más importante puesto que si es
 agregado con un valor incorrecto, el sistema no responderá como se espera.
 Este periodo define la frecuencia de muestreo a la que el sistema trabaja.
\end_layout

\end_deeper
\begin_layout Enumerate
Ahora, se necesita agregar uno de los bloques más importantes los cuales
 defininen el módulo que será sintetizado por la FPGA: Los bloques de entrada/sa
lida, conocidos como 
\emph on
'Gateway in' 
\emph default
y 
\emph on
'Gateway Out'
\emph default
.
 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/gateway_in_out.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bloques de entrada/salida que acotan la implementación en el FPGA del algoritmo
 a diseñar.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
En otras palabras, los únicos bloques que pueden comunicarse directamente
 con otros toolboxes de Simulink son los 
\emph on
Gateway In/Out
\emph default
.
 Este par de bloques transforman los estímulos de Simulink en datos que
 el FPGA puede procesar, también son capaces de capturar la información
 del tipo de dato a utilizar (punto fijo o punto flotante), la frecuencia
 de muestreo e incluso alguna locación física dentro de los puertos de entrada
 y salida generales de la FPGA, para funcionar como disparadores externos.
\end_layout

\begin_layout Standard
Este bloque se configura de la siguiente manera:
\end_layout

\begin_layout Itemize

\series bold
Output type:
\series default
 Fixed point.
\end_layout

\begin_layout Itemize

\series bold
Arithmetic type: 
\series default
Signed (2's comp).
\end_layout

\begin_layout Itemize

\series bold
Fixed-point Precision > Number of bits:
\series default
 16, 
\series bold
Binary point:
\series default
 14.
\end_layout

\begin_layout Itemize

\series bold
Sample period: 
\series default
2.0833e-05.
\end_layout

\end_deeper
\begin_layout Enumerate
Como se utilizó en el algoritmo de Matlab, será necesario generar la señal
 que deseamos filtrar, a partir de utilizar dos generadores de señal senoidal
 del toolbox de Simulink, ubicados en 
\series bold
Simulink > Sources > Sine Wave, 
\series default
como se muestra en la Figura
\series bold
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Generadores-de-función"

\end_inset

.
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/sinewave_gen.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
\begin_inset Caption Standard

\begin_layout Plain Layout
Generadores de función senoidal utilizados para generar la señal a filtrar.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Generadores-de-función"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
Se deben utilizar dos generadores de señal senoidal, con los parámetros
 mostrados a continuación: 
\end_layout

\begin_layout Enumerate
Señal base:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Amplitude: 
\series default
1.
\end_layout

\begin_layout Itemize

\series bold
Frequency:
\series default
 
\begin_inset Formula $f_{senBase}*2pi=1e3*2*pi$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Sample time: 
\begin_inset Formula $1/Fs=1/48e3$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/sinebase_sysgen.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Parámetros de configuración para la componente base de entrada al sistema
 de filtrado.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Señal a filtrar:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Amplitude: 
\series default
0.5.
\end_layout

\begin_layout Itemize

\series bold
Frequency:
\series default
 
\begin_inset Formula $f_{senRuido}*2pi=15e3*2*pi$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Sample time: 
\begin_inset Formula $1/Fs=1/48e3$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/sinenoise_sysgen.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Parámetros de configuración para la componente de ruido de entrada al sistema
 de filtrado.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
También se necesitará un sumador de señales para mezclar ambas funciones
 senoidales, el cual se encuentra en 
\series bold
Simulink > Math Operations Sum: 
\begin_inset Graphics
	filename img/sum_simulink.png
	scale 40

\end_inset

.
\end_layout

\begin_layout Enumerate
El bloque que se encargará de filtrar la señal se encuentra en 
\series bold
Xilinx Blockset > DSP > FIR Compiler 5.0
\series default
, se debe configurar con los siguientes parámetros:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Coefficient Vector = 
\begin_inset Formula $fir1(orden,Wn)$
\end_inset

 = 
\series default
[0.0016,0.0013,-0.0005,-0.0037,-0.0055,-0.0018,0.0084,0.0175,0.0133,-0.0103,-0.0406,-0.0482,
-0.0053,0.0900,0.2034,0.2804,0.2804,0.2034,0.0900,-0.0053,-0.0482,-0.0406,-0.0103,0.0133,0.01
75,0.0084,-0.0018,-0.0055,-0.0037,-0.0005,0.0013,0.0016].
\end_layout

\begin_layout Itemize

\series bold
Hardware Oversampling Specification > Sample Format: 
\series default
Sample_period
\series bold
.
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Sample Period
\series default
: 1.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Implementation > Filter Architecture
\series default
: Distributed_Arithmetic.
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Coefficient Options > Coefficient Structure:
\series default
 Inferred.
\end_layout

\begin_layout Itemize

\series bold
Coefficient Type: 
\series default
Signed.
\end_layout

\begin_layout Itemize

\series bold
Quantization: 
\series default
Quantize_Only.
\end_layout

\begin_layout Itemize

\series bold
Coefficient Width:
\series default
 16.
\end_layout

\begin_layout Itemize
Checar la opción 
\series bold
Best Precision Fraction Length.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/fircompiler_opts.png
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Configuración del bloque FIR Compiler.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Una vez teniendo estos elementos en el nuevo modelo de Simulink, se deben
 conectar como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Interconexión-de-los"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/lab1_sysgen_working.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interconexión de los bloques de Simulink/Sysgen para la elaboración del
 filtro FIR.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Interconexión-de-los"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Debido a que la señal de interés en este sistema, es la 
\begin_inset Formula $f_{senBase}$
\end_inset

 con 1KHz, para poder observar 10 muestras en el osciloscopio de simulink,
 pondremos como valor en el 
\emph on
Simulink stop time
\emph default
 = 0.010, que equivale a multiplicar el periodo de la señal de 1KHz por 10.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/parametros_de_simulacion.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Parámetro de tiempo de simulación para este ejercicio.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Ejecutar el sistema.
 El scope deberá mostrar dos señales, en la parte superior la señal con
 ruido inducido y en la posterior, la señal filtrada libre de cualquier
 deformación, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Resultado-de-la"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/myfigurescope.jpg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultado de la simulación del sistema utilizando los bloques de Sysgen.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Resultado-de-la-1"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Implementación del sistema en el kit Atlys.
\end_layout

\begin_layout Standard
El siguiente proceso describe como utilizar el kit Atlys como co-procesador,
 mediante la compilación y generación de una biblioteca que contiene el
 modelo que se describió con anterioridad.
 Mediante el uso de la herramienta Sysgen, se generarán los archivos de
 HDL necesarios así como la síntesis e implementación en segundo plano.
 Al finalizar, La tarjeta de desarrollo será capáz de comunicarse con Simulink
 para enviar y recibir los datos correspondientes a este modelo.
\end_layout

\begin_layout Enumerate
Al dar doble clic sobre 
\emph on
'Sysgen token'
\emph default
, existe un parámetro de usuario donde se define el tipo de compilación.
 Para este caso, se utilizarán las siguiente configuración:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Compilation: 
\series default
Hardware Co-Simulation > Atlys > JTAG.
\end_layout

\end_deeper
\begin_layout Enumerate
Dar clic en 
\emph on
'Generate'.
 
\emph default
Esto ejecutará a PlanAhead en segundo plano, con la intención de generar
 el 
\emph on
bitfile
\series bold
 
\series default
\emph default
o ejecutable que se descargará en la FPGA.
 Al finalizar, aparecerá en una nueva ventana la biblioteca generada por
 Sysgen, que no es más que la representación del algoritmo en términos de
 hardware.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/firlib_generated.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Generación de la representación del kit Atlys en Simulink, el cual contiene
 los recursos de hardware necesario para ejecutar el algoritmo del filtro
 FIR.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Con el nuevo bloque generado, se deben actualizar las conexiones de la siguiente
 forma.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/lab1_sysgen_fpgaincluded.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Conexión del bloque de Co-simulación.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Al integrar el bloque generado por Sysgen, es necesario conectar el kit
 Atlys a la PC antes de volver a ejecutar la simulación, puesto que ahora,
 el bitfile se descargará en el kit y podremos observar los resultados en
 el segundo osciloscopio, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comparación-entre-el"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/output_from_fir_I.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparación entre el resultado de la simulación en contraste con la ejecución
 en FPGA como co-procesador.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Comparación-entre-el"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
La traducción de este filtro FIR a hardware se hizo mediante la utilización
 de BRAMs para almacenar los coeficientes, un contador y un par de elementos
 multiplicadores y acumuladores.
 Todo esto se puede analizar abriendo el proyecto generado que se encuentra
 en 
\emph on
netlist > hwcosim > nombre_del_proyecto.ppr
\emph default
 con PlanAhead.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/planahead_fir_schem.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama esquemático de la implementación del modelo del filtro FIR en FPGA.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
La utilización del sistema y frecuencia máxima a la que se puede ejecutar
 este modelo se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Utilización-de-recursos"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/planahead_fir_utilization.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Utilización de recursos de la FPGA para la implementación del filtro FIR.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Utilización-de-recursos"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Procesamiento de Audio - Algoritmo de eco.
\end_layout

\begin_layout Subsection
Filtros FIR peine o 
\emph on
comb filter.
\end_layout

\begin_layout Standard
El efecto de eco es uno de los más utilizados en el procesamiento de señales
 de audio.
 De este se pueden derivar otros más como la reverberación, vibrato, coro
 y otras transformaciones basadas en retrasos.
\end_layout

\begin_layout Standard
Esta implementación está basada en la utilización del filtro FIR conocido
 como 
\series bold
peine 
\series default
o en inglés como 
\emph on
fir comb filter
\emph default
.
 La entrada del filtro es retrasada por un tiempo definido y el efecto sólo
 será audible cuando la señal procesada sea combinada con la original (de
 ahí el nombre de 
\emph on
comb filter
\emph default
).
\end_layout

\begin_layout Standard
La ecuación diferencial del filtro peine está dada por:
\begin_inset Formula 
\begin{equation}
y_{n}=x_{n}+g*x_{n-M}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Si trasladamos la ecuación 
\series bold
7.1
\series default
 a un diagrama de bloques, nos queda como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comb_filter"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/comb_filter.jpeg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama a bloques del filtro peine o 
\emph on
comb filter.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Comb_filter"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A partir de esto podemos observar que, la estructura se conforma de elementos
 básicos como bloques de retraso (
\begin_inset Formula $Z^{-M}$
\end_inset

), multiplicadores que sirven como ganancia y sumadores, los cuales fácilmente
 pueden ser implementados en un FPGA.
\end_layout

\begin_layout Subsection
Implementación en FPGA del códec de audio AC97.
\end_layout

\begin_layout Standard
El códec de audio disponible en la tarjeta Atlys es el AC97 LM4550
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Para obetener mayor información técnica a cerca del códec, visitar: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.xilinx.com/products/boards/ml510/datasheets/lm4550.pdf
\end_layout

\end_inset


\end_layout

\end_inset

 de National Semiconductor; AC97 es un standard desarrollado por Intel en
 1997, el cual es utilizado en tarjetas madre de ordenadores, módems y tarjetas
 de sonido.
\end_layout

\begin_layout Standard
El formato de datos del LM4550 es serial, de 18 bits con una frecuencia
 de muestreo a 48KHz.
 Es importante mantener este dato en consideración a la hora de realizar
 cualquier algoritmo de procesamiento, puesto que, si la magnitud de la
 trama enviada al códec es mayor o menor a la requerida, será necesario
 alinear los datos para que la señal de audio no sea deformada, haciéndola
 parecer como una señal de ruido.
\end_layout

\begin_layout Standard
Puesto que el objetivo de este documento no es detallar el desarrollo del
 controlador del códec, se provee un netlist pre-sintetizado (Verilog) el
 cual tiene toda las siguientes características (véase Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:AC97_schem"

\end_inset

):
\end_layout

\begin_layout Itemize
Frecuencia de trabajo a 100MHz, provenientes del oscilador externo al FPGA.
\end_layout

\begin_layout Itemize
Reset activado por flanco de bajada (activo en bajo).
\end_layout

\begin_layout Itemize
Reloj de 12.288MHz desde el puerto 
\emph on
bit clock
\emph default
 del códec.
\end_layout

\begin_layout Itemize
Selector de 3 bits para escoger la fuente de entrada (Mic, LineIn, headphone)
 y de 5 bits para volúmen.
 Estos se pueden mapear a los switches de la tarjeta Atlys para controlar
 dichos parámetros.
 
\end_layout

\begin_layout Itemize
Parámetros seleccionados para la mayor calidad de audio posible: 48KHz de
 frecuencia de sampleo, con una palabra de 16 bits en lugar de 18 (por compatibi
lidad con la mayoria de los formatos de audio disponibles).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/ac97_sch.svg
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama a bloques de la implementación del controlador para el códec AC97
 en Verilog.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:AC97_schem"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Desarrollo del modelo en Sysgen.
\end_layout

\begin_layout Standard
Los pasos para llevar a cabo la implementación del algoritmo de eco se muestran
 a continuación:
\end_layout

\begin_layout Enumerate
A partir de tener el nuevo espacio de trabajo en Simulink (se pueden seguir
 los pasos 1 a 4 de la subsección 
\series bold
6.3 Simulación del sistema en Sysgen
\series default
), el bloque 
\emph on
Sysgen Token
\emph default
 deberá tener las siguientes configuraciones:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Compilation: 
\series default
HDL Netlist.
\end_layout

\begin_layout Itemize

\series bold
Part: 
\series default
Sparnta6 xc6lx45-3csg324
\end_layout

\begin_layout Itemize

\series bold
Synthesis tool: 
\series default
XST, 
\series bold
Language:
\series default
 Verilog.
\end_layout

\begin_layout Itemize

\series bold
Project Type: 
\series default
PlanAhead.
\end_layout

\begin_layout Itemize

\series bold
Synthesis Strategy: 
\series default
TimingWithIOBPacking
\end_layout

\begin_layout Itemize

\series bold
Implementation Strategy: 
\series default
ParHighEffort.
\end_layout

\begin_layout Itemize

\series bold
Clocking Tab > FPGA clock period (ns):
\series default
 10.
\end_layout

\begin_layout Itemize

\series bold
Multirate implementation: 
\series default
Clock Enables.
\end_layout

\begin_layout Itemize

\series bold
Simulink system period: 
\series default

\begin_inset Formula $\nicefrac{1}{48KHz}=2.0833e-05$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Añadir el bloque 
\series bold
DSP System Toolbox > From Multimedia File 
\series default
y configurarlo como sigue:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
File name: 
\series default
En este documento se proporciona el archivo partita_e_major.wav obtenida
 libremente de 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.music.helsinki.fi/tmt/opetus/uusmedia/esim/index-e.html
\end_layout

\end_inset

.
 Este archivo de audio tiene la frecuencia de muestreo a 48KHz, stereo a
 16 bits.
\end_layout

\begin_layout Itemize
Seleccionar el recuadro 
\series bold
Inherit sample time from file.
\end_layout

\begin_layout Itemize

\series bold
Number of times to play the file: 
\series default
1.
\end_layout

\begin_layout Itemize

\series bold
Outputs > Samples per audio channel: 
\series default
1.
\end_layout

\begin_layout Itemize

\series bold
Outputs > Audio output sampling mode:
\series default
 Sample based.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/input_from_multimedia_file_AC97.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuración del bloque 
\emph on
From multimedia File
\emph default
 para servir como fuente de sonido.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
El archivo de audio representa una matiz de 1x1 (datos, frecuencia de muestreo).
 Es necesario convertir esta matriz a un vector de un solo elemento mediante
 el uso de los bloques 
\emph on
'Reshape' 
\emph default
y 
\emph on
'Unbuffer'
\emph default
, ubicados en 
\series bold
Simulink > Math Operations 
\series default
y 
\series bold
DSP System Toolbox > Signal Management > Buffers
\series default
 respectivamente.
 
\end_layout

\begin_layout Enumerate
Para manejar los canales de audio dentro de la FPGA, se utilizarán dos 
\emph on
'Gateway In' 
\emph default
con los parámetros siguientes:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Output type: 
\series default
Fixed point.
\end_layout

\begin_layout Itemize

\series bold
Arithmetic type: 
\series default
Signed (2's comp).
\end_layout

\begin_layout Itemize

\series bold
Fixed-point Precision: 
\series default
Number of bits = 16, Binary point = 14.
\end_layout

\begin_layout Itemize

\series bold
Overflow: 
\series default
Saturate.
\end_layout

\begin_layout Itemize

\series bold
Sample period: 
\series default
2.0833e-05.
\end_layout

\begin_layout Itemize
Es necesario nombrar ambos puertos como 
\series bold
AudioLeftIn
\series default
 y 
\series bold
AudioRightIn
\series default
 respectivamente, cuidando de siempre mantener los mismos nombres o de lo
 contrario, el archivo NCG del controlador del códec marcará un error al
 intentar utilizar el netlist de Sysgen.
 Se deben configurar como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configuración-del-tipo"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/audiosin_sysgen_ac97.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuración del tipo de dato usado por los puertos de entrada al filtro
 peine.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Configuración-del-tipo"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Como se mostró al principio de la 
\series bold
subsección 7.1
\series default
, ahora será necesario construir el filtro comb, siguiendo el bloque de
 la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comb_filter"

\end_inset

 con algunas alteraciones necesarias para adaptarlo al kit Atlys, mismas
 que se explicarán posteriormente.
 El bloque debe quedar como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Filtro-comb-(FIR)"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/eco_reverb_algo.png
	lyxscale 30
	scale 36

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Filtro comb (FIR) con retroalimentación realizado en Sysgen.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Filtro-comb-(FIR)"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El filtro se compone de un bloque 
\emph on
delay
\emph default
 de 4500 unidades de retraso (cada una de estas unidades representa un flipflop
 en términos de recursos de FPGA) y un subsistema de ganancia nombrado 
\series bold
\emph on
gain2
\series default
\emph default
, el cual se muestra a más detalle en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Parámetros-de-la"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/ganancia_2.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Parámetros de la ganancia del filtro comb.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Parámetros-de-la"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los bloques que le preceden al sumador 
\series bold
\emph on
AddSub1 
\series default
\emph default
son necesarios debido a que, durante el flujo de información a través de
 los multiplicadores que actúan como ganancia, los datos se ven afectados
 sufriendo incrementos debido a la magnitud que ahora deben representar
 (aumenta el número de bits).
 Como el controlador del AC97 trabaja sólo con palabras de 16 bits, es necesario
 alinear y transformar la salida de dicho sumador, a que cumpla con los
 16 bits requeridos por el códec.
\end_layout

\begin_layout Standard
La ganancia de retroalimentación es utilizada para estabilizar la salida
 del filtro, con el fin de remover lo más posible, ruido inferido por las
 modificaciones aplicadas a la señal de audio.
 Dicha ganancia esta elaborada por el subsistema 
\series bold
\emph on
gain1
\series default
\emph default
, el cual se muestra a mayor detalle en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ganancia-de-retroalimentación"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/gain1_subsystem.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ganancia de retroalimentación para estabilizar el sistema.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Ganancia-de-retroalimentación"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Por último, el bloque 
\series bold
\emph on
Delay5
\series default
\emph default
 es utilizado para sincronizar los sumadores 
\series bold
\emph on
AddSub 
\series default
\emph default
y 
\series bold
AddSub1
\series default
\emph on
 
\emph default
y así evitar problemas de timing
\emph on
 
\emph default
debido al 
\emph on
cruce de reloj cruzado (CDC por sus siglas en Inglés).
 
\emph default
Se pueden modificar los valores de retraso y ganancias con el fin de obtener
 efectos mucho más notables.
\end_layout

\end_deeper
\begin_layout Enumerate
Los elementos mostrados en el paso 
\series bold
5
\series default
, pueden ser convertidos a subsistema para mantener la sencilléz del sistema
 (seleccionar los bloques y ejecutar CTRL+G, los subsistemas pueden ser
 nombrados a gusto del usuario) y replicados para así, tener los dos canales
 del formato estéreo, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Conversión-del-filtro"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/finalized_algo.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Conversión del filtro comb en subsistemas y replicación para formato estéreo.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Conversión-del-filtro"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Como paso final, se deberan arrastrar dos 
\emph on
'Gateway Out' 
\emph default
al espacio de trabajo de simulink, y nombrarlos 
\series bold
AudioLeftOut 
\series default
y 
\series bold
AudioRightIn 
\series default
respectivamente, así como un bloque 
\emph on
Mux 
\emph default
(
\series bold
Simulink > Commonly Used Blocks
\series default
) y un bloque 
\emph on
To Multimedia File 
\emph default
(
\series bold
DSP System Toolbox > Sinks
\series default
), y conectarlos como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Interconección-del-sistema"

\end_inset

.
 El recuadro girs nombrado 
\series bold
Audio_algoritmo 
\series default
representa ambos filtros desarrollados.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/ac97_full_system.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Interconección del sistema de eco finalizado.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Interconección-del-sistema"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Para hacer la simulación de este modelo, utilizaremos un valor menor a la
 duración en segundos del archivo de audio como 
\emph on
'stop time'
\emph default
 en Simulink.
 El efecto es perfectamente audible utilizando el valor de 
\series bold
10.0(s)
\series default
.
 El efecto de eco puede ser analizado reproduciendo el archivo generado
 por el bloque '
\emph on
To Wave File'
\emph default
 en la ruta especificada dentro del mismo, o utilizando el 
\emph on
'Time Scope'
\emph default
 para observar los datos con un ligero desfase, como se muestra en la Figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfica-resultante-del"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/audio_procesado_final.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Gráfica resultante del eco aplicado al archivo de audio.
 La señal de la parte superior representa el audio sin procesar, mientras
 que la señal inferior muestra el audio procesado, el cual se compone de
 un desfase y una amplitud diferente a la original.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfica-resultante-del"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Implementación en el kit Atlys.
\end_layout

\begin_layout Enumerate
Una vez que obtenemos el resultado esperado, es necesario generar un 
\emph on
'Netlist' 
\emph default
(archivos HDL en Verilog o VHDL) para poder utilizar este modelo dentro
 de la interface del codec de audio\SpecialChar endofsentence
 Esto se logra dando doble clic sobre
 el '
\emph on
Sysgen Token'
\emph default
 > 
\emph on
'Generate'.
\end_layout

\begin_layout Enumerate
Al terminar el proceso anterior, lanzar PlanAhead y crear un nuevo proyecto
 RTL
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Se añade un proyecto previamente configurado y funcionando con este documento,
 para referencia.
\end_layout

\end_inset

 (véase 
\series bold
Apéndice D:
\series default
 
\series bold
Creación de projectos usando PlanAhead
\series default
 para más detalles).
 Se deben agregar primeramente los archivos 
\series bold
ac97cmd.v
\series default
, 
\series bold
ac97cmd.ngc
\series default
, 
\series bold
ac97.v
\series default
, 
\series bold
ac97.ngc, ac97_constraints.ucf 
\series default
y 
\series bold
\emph on
rt_audio_controller.v
\series default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Estos archivos se encuentran adjuntos en el proyecto de referencia.
 
\end_layout

\end_inset

, 
\emph default
este último es el top module o módulo principal., que se conforma de las
 siguientes estructuras:
\end_layout

\begin_deeper
\begin_layout Itemize
En primer lugar se definen los puertos de la interfáz principal entre el
 códec de audio y la FPGA.
 La directiva de compilación de la línea 1, 
\emph on
'NO_LOOPBACK', 
\emph default
al estar comentada, hace que las salidas del códec se conecten a sus entradas
 (
\emph on
loopback
\emph default
).
 Al momento de instanciar el modelo generado en Sysgen, esta directiva debe
 ser descomentada.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Color Box
status collapsed

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
arc=0mm,colback=white, colframe=black, fonttitle=
\backslash
sffamily
\backslash
bfseries
\backslash
large, title=Puertos del módulo principal
\end_layout

\end_inset


\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/diego/Documents/Finalized/examples/audio_ac97/AC97_IP/rt_audio_controller.v"
lstparams "language=Verilog,basicstyle={\\mlttfamily\\scriptsize},commentstyle={\\color{gray}},keepspaces=true,numberstyle={\\tiny\\color{black}},keywordstyle={\\mlttfamily\\color{blue}},tabsize=2,breaklines=true,columns=flexible,linerange={1-10},frame=none"

\end_inset


\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
La instanciación de la IP de audio se hace como se muestra a continuación.
 Se necesitan los archivos 
\series bold
ac97cmd.v
\series default
, 
\series bold
ac97cmd.ngc
\series default
, 
\series bold
ac97.v y ac97.ngc 
\series default
para ser utilizada.
 Además, sólo funciona para la familia de FPGAs utilizada en el kit Atlys.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Color Box
status collapsed

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
arc=0mm,colback=white, colframe=black, fonttitle=
\backslash
sffamily
\backslash
bfseries
\backslash
large, title=Instanciación de la IP de audio AC97
\end_layout

\end_inset


\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/diego/Documents/Finalized/examples/audio_ac97/AC97_IP/rt_audio_controller.v"
lstparams "language=Verilog,basicstyle={\\mlttfamily\\scriptsize},commentstyle={\\color{gray}},keepspaces=true,numberstyle={\\tiny\\color{black}},keywordstyle={\\mlttfamily\\color{blue}},tabsize=2,breaklines=true,columns=flexible,linerange={35-64},frame=none"

\end_inset


\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
Por último, el módulo generado por Sysgen está instanciado como se muestra
 en el siguiente cuadro.
 Si se utilizara otro módulo con un nombre diferente, sólo basta con especificar
 el nombre de este y hacer las conexiones necesarias.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Color Box
status collapsed

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
arc=0mm,colback=white, colframe=black, fonttitle=
\backslash
sffamily
\backslash
bfseries
\backslash
large, title=Instanciación del algoritmo de eco generado por Sysgen
\end_layout

\end_inset


\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "/home/diego/Documents/Finalized/examples/audio_ac97/AC97_IP/rt_audio_controller.v"
lstparams "language=Verilog,basicstyle={\\mlttfamily\\scriptsize},commentstyle={\\color{gray}},keepspaces=true,numberstyle={\\tiny\\color{black}},keywordstyle={\\mlttfamily\\color{blue}},tabsize=2,breaklines=true,columns=flexible,linerange={66-73},frame=none"

\end_inset


\end_layout

\end_inset

 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Al terminar de configurar el nuevo proyecto, se deberá ver como se muestra
 en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Vista-jerárjica-de"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/planahead_activity_ac97.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Vista jerárjica de las fuentes utilizadas para el proyecto.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Vista-jerárjica-de"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede observar, el netlist del algoritmo de eco aparece como faltante.
 Para agregar estas dependencias, basta con dar clic sobre 
\series bold
Add sources > Add or Create Design Sources
\series default
, en la columna 
\series bold
Project Manager
\series default
, y seleccionar 
\series bold
Add Files
\series default
.
 En la ventana que aparece, seleccionar el directorio 
\series bold
netlist/sysgen
\series default
 para añadir los archivos Verilog 
\series bold
algodev.v 
\series default
y 
\series bold
algodev_cw.v
\series default
, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Archivos-de-Verilog"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/verilog_files_ac97.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Archivos de Verilog que contienen el hardware realizado en Sysgen para implement
ar el algoritmo de procesamiento de audio.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Archivos-de-Verilog"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Ahora, se puede ir a través de todo el flujo de implementación en FPGA dando
 clic sobre 
\series bold
Program and Debug > Generate Bitstream
\series default
.
 Esto ejecutará el proceso de Síntesis, Place and Route y generará el 
\emph on
bitfile
\series bold
 
\series default
\emph default
o archivo de configuración que se deberá descargar al kit Atlys.
 
\end_layout

\begin_deeper
\begin_layout Standard
El esqemático de módulo princpial se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Esquemático-completo-de"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/codec_impl_ac97final.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Esquemático completo de la implementación del modelo de procesamiento de
 audio.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Esquemático-completo-de"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
La utilización total de recursos y frecuencia máxima de trabajo se muestra
 en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Utilización-y-frecuencia"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/utilizacion_ac97.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Utilización y frecuencia máxima de trabajo de la implementación final.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Utilización-y-frecuencia"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Para ejecutar este diseño en la tarjeta Atlys, se debe conectar una fuente
 de audio (micrófono, reproductor MP3, étc) en el plug de color azul (Line
 In) y unos audífonos o bocina en el plug verde (Line Out), como se muestra
 en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Conexiones-a-la"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename misc/ac97_util.png
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Conexiones a la tarjeta Atlys para ejecutar el algoritmo desarrollado.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Conexiones-a-la"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Procesamiento de imágenes - Detección de bordes.
\end_layout

\begin_layout Subsection
Características técnicas y arquitectura del modelo a implementar.
\end_layout

\begin_layout Standard
El flujo fundamental del diseño de algoritmos para el procesamiento digital
 de señales, se basa en la simulación y refinamiento del prototipo a implementar.
 Una vez que se tiene el resultado esperado del filtro en la imágen, se
 puede implementar en un modelo más complejo.
\end_layout

\begin_layout Standard
Para esta sección, se ilustrará paso a paso el desarrollo del operador Sobel
 para detección de bordes sobre imágenes en escala de grises, el cual debe
 cumplir las siguientes características:
\end_layout

\begin_layout Itemize
La transformación de RGB a escala de grises se debe hacer directo en la
 FPGA, de esta manera se puede reutilizar en sistemas mucho más complejos
 o en algoritmos diferentes.
\end_layout

\begin_layout Itemize
La frecuencia (periodo) del modelo de Simulink debe ser de 5.0863ns.
\end_layout

\begin_layout Itemize
Para términos de simplicidad, el modelo será ejecutado en el kit Atlys como
 co-simulación.
\end_layout

\begin_layout Itemize
La imagen a procesar es la que se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Imagen-utilizada-para"

\end_inset

, con una dimensión de 512*384.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/peppers_ex.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Imagen utilizada para la implementación del filtro Sobel.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Imagen-utilizada-para"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Algoritmo del filtro Sobel.
\end_layout

\begin_layout Standard
La detección de bordes mediante la implementación del filtro Sobel es una
 práctica fundamental en el área del procesamiento de imágenes y video.
 Este algoritmo es utilizado para la extracción de características de imágenes
 en 2D a escala de grises
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Se utilizan imagenes a escala de grises y de dimensiones pequeñas para diseñar
 operaciones sobre ellas, puesto que simplifican la potencia computacional
 necesaria para obtener un resultado satisfactorio.
\end_layout

\end_inset

, mediante el énfasis de las regiones de alta frecuencia espacial, que correspon
den a los bordes.
\end_layout

\begin_layout Standard
El principio de implementación se basa en utilizar dos operadores de convolción
 matriciales o 
\series bold
kernels
\series default
, mostrados en la Ecuación 8.1.
 Estos operadores son matrices de diferente tamaño a la imagen (generalmente
 más pequeñas) pero de igual dimensión que dan como resultado, la estimación
 de la primera derivada vertical y horizontalmente con respecto a la cuadrícula
 de pixeles.
\end_layout

\begin_layout Standard
\align center
\begin_inset Formula 
\begin{align}
G_{x} & =\begin{bmatrix}-1 & 0 & 1\\
-2 & 0 & 2\\
-1 & 0 & 1
\end{bmatrix}\qquad G_{y}=\begin{bmatrix}1 & 2 & 1\\
0 & 0 & 0\\
-1 & -2 & -1
\end{bmatrix}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Después de aplicar la convolución usando dichos kernels, es necesario obtener
 la magnitud absoluta de las componentes obtenidas en ambos cálculos, utilizando
 la fórmula mostrada en la Ecuación 8.2:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left|G\right|=\sqrt{G_{x}^{2}+G_{y}^{2}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Así mismo, se puede obtener el ángulo de orientación del borde (para usos
 más complejos) aplicando la Ecuación 8.3:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\theta=\arctan\frac{G_{x}}{G_{y}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Este algoritmo, a diferencia de otros como el 
\emph on
Canny
\emph default
 o 
\emph on
Roberts Cross
\emph default
, es menos sensible al ruido lo que significa que es más estable, aunque
 es más lento en cuanto a términos de computación de resultados.
\end_layout

\begin_layout Subsection
Descomposición del espacio de colores RGB.
\end_layout

\begin_layout Standard
El proceso mostrado a continuación muestra como separar las componentes
 R | G | B de la imagen a procesar:
\end_layout

\begin_layout Enumerate
En un nuevo modelo de Simulink, instanciar un objeto 
\emph on
'Image From File' 
\emph default
que se encuentra en 
\series bold
Computer Vision System > Sources
\series default
, con las configuraciones mostradas en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Parámetros-de-configuración"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/image_viewer.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Parámetros de configuración del bloque 
\emph on
'Image From File'.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Parámetros-de-configuración"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El tipo de dato se deja en 
\series bold
double
\series default
, en la pestaña 
\emph on
'Data types'
\emph default
.
\end_layout

\end_deeper
\begin_layout Enumerate
Se necesitan también los bloques de 
\emph on
'Transpose'
\emph default
, 
\emph on
'Reshape'
\emph default
, '
\emph on
Frame Conversion'
\emph default
 y finalmente 
\emph on
'Unbuffer'
\emph default
, con los parámetros mostrados en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:bloques_sobel_imagen"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/blocks_config_rgb.png
	scale 25
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuración de los bloques 
\emph on
'Transpose'
\emph default
, 
\emph on
'Reshape'
\emph default
, '
\emph on
Frame Conversion'
\emph default
 y 
\emph on
'Unbuffer', 
\emph default
respectivamente
\emph on
.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:bloques_sobel_imagen"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Se deben conectar dichos bloques como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Conexión-de-los"

\end_inset

, y repitiendo la estructura para cada uno de los espacios de colores RGB.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/conexion_buffering.png
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Conexión de los bloques necesarios para convertir la matríz 2D en un vector
 de 1D necesario para cada una de las componentes del espacio de color.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Conexión-de-los"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las entradas a esta estructura vienen del bloque 
\emph on
'Image From File'
\emph default
, y a las salidas se puede conectar ya, el modelo de conversión RGB a escala
 de grises.
 La Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Conexión-entre-la"

\end_inset

 muestra los mismos bloques del Paso 3, convertidos en un subsistema.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/subsystem_buffer.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Conexión entre la fuente de imágen hacia el bloque de conversión de la matríz
 2D a vectores por espacio de color.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Conexión-entre-la"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Modelo de conversión RGB a escala de grises.
\end_layout

\begin_layout Standard
Para llevar a cabo esta conversión, se utilizará el método de luminosidad,
 el cual consiste en ponderar específicamente a cada uno de los espacios
 de color.
 Dicho de otra forma, se debe aplicar la expresión mostrada en la Ecuación
 8.4:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Y_{i,\,j}=0.2989Y_{i,\,j,\,1}+0.58709Y_{i,\,j,\,2}+0.1140Y_{i,\,j,\,3}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Siguiendo los lineamientos dados en las especificaciones técnicas, la construcci
ón de este algoritmo se logra siguiendo los pasos a continuación.
\end_layout

\begin_layout Enumerate
Agregar el 
\emph on
'Sysgen Token' 
\emph default
con los siguientes parámetros:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Compilation: 
\series default
Hardware Co-Simulation > Atlys > JTAG.
\end_layout

\begin_layout Itemize

\series bold
Synthesis tool: 
\series default
XST.
\end_layout

\begin_layout Itemize

\series bold
Hardware Description Language: 
\series default
Verilog.
\end_layout

\begin_layout Itemize

\series bold
Project type: 
\series default
PlanAhead.
\end_layout

\begin_layout Itemize

\series bold
Synthesis strategy: 
\series default
PlanAhead Defaults.
\end_layout

\begin_layout Itemize

\series bold
Implementation Strategy: 
\series default
ISE Defaults.
\end_layout

\begin_layout Itemize

\series bold
Clocking > Simulink system period: 
\series default
5.0863e-06.
\end_layout

\end_deeper
\begin_layout Enumerate
Añadir un 
\emph on
'Gateway In'
\emph default
 por cada espacio de color, con la configuracion mostrada en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configuración-para-las"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/RGB_gateways.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuración para las entradas RGB al sistema en FPGA.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Configuración-para-las"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Para efectos de rendimiento, se sugiere añadir un bloque 
\emph on
'Register' 
\emph default
a cada una de las entradas, como se muestra a continuación.
 Esto agrega un flujo de 
\series bold
cañería, 
\series default
mejor conocido como 
\series bold
pipeline
\series default
, que transforma un sólo proceso en varias fases para evitar problemas de
 
\series bold
timing
\series default
.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/registers_xilinx.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Entradas registradas usando bloques de Sysgen, con sus configuraciones originale
s.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
La Ecuación 8.4 utiliza operadores como la suma y la multiplicación por cada
 uno de los valores constantes.
 Esto se traduce en hardware de la misma manera, utilizando un bloque 
\emph on
'CMult'
\emph default
 (
\series bold
Xilinx Blockset > Floating-Point
\series default
)
\series bold
 
\series default
para cada uno de los canales de color, como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configuración-de-los"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/cmult_settings.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Configuración de los multiplicadores por el valor constante requerido para
 R, G y B respectivamente.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Configuración-de-los"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Así mismo, dos bloques 
\emph on
'AddSub' 
\emph default
(
\series bold
Xilinx Blockset > Floating-Point
\series default
) son necesarios para obtener la suma de los valores calculados en el Paso
 4.
 Los parámetros de estos dos bloques no se modifican.
\end_layout

\begin_layout Enumerate
La conexión a realizar utilizando los bloques antes mencionados se muestra
 en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Modelo-completo-que"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/rgb2gray_fpga.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Modelo completo que realiza la conversión RGB a escala de grises de la imagen
 obtenida por el bloque 
\emph on
'Image From File'
\emph default
.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Modelo-completo-que"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
El subsustema 
\emph on
'VideoView Gray'
\emph default
 se compone de un 
\emph on
'buffer
\emph default
' con capacidad de 196608 unidades (512*384), un bloque 
\emph on
'Frame conversion' 
\emph default
con su configuraciones sin modificar, un bloque 
\emph on
'Convert 1-D to 2-D' 
\emph default
con los parámetros mostrados en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Parámetros-necesarios-para"

\end_inset

, y un bloque 
\emph on
'Transpose' 
\emph default
sin modificar.
 Todos conectados como se muestra en la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Reconstrucción-de-la"

\end_inset

.
 El princpial objetivo de este bloque es, reconstruir los datos multiplicados
 por el operador de luminosidad mostrada en la Ecuación 8.4 y al mismo tiempo,
 ensamblar esos datos en una matriz 2D que representa la imagen obtenida.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/convert_1d_to_2d.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Parámetros necesarios para el bloque 
\emph on
'Convert 1-D to 2-D'.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Parámetros-necesarios-para"

\end_inset


\emph default
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/image_view_subsystem.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Reconstrucción de la imagen procesada por los bloques FPGA.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Reconstrucción-de-la"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Como tiempo de simulación, se recomienda generalmente utilizar el número
 de filas por el número de columnas, en este caso 512*384.
 Al ejecutar la simulación, el resultado debe ser como se muestra en la
 Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Resultado-esperado-de"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/result_grayscale.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultado esperado de la conversión RGB a escala de grises.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Resultado-esperado-de"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si se compara la salida de este modelo, con la función clásica de Matlab,
 
\emph on
'rgb2gray'
\emph default
, las matrices tendran los mismos valores puesto que dicha función está
 basada en el mismo principio que el modelo desarrollado en esta sección.
\end_layout

\end_deeper
\begin_layout Subsection
Operador Sobel usando filtros FIR.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_body
\end_document
