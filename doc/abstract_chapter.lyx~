#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
\date{}
\usepackage{textcomp}
\usepackage[nottoc,notlof,notlot]{tocbibind} % Put the bibliography in the ToC
\usepackage{listings}
\usepackage{color}
\usepackage[numbered,framed]{matlab-prettifier}
\lstset{style=Matlab-editor}
\usepackage{tikz}
\usetikzlibrary{dsp,chains}
\DeclareMathAlphabet{\mathpzc}{OT1}{pzc}{m}{it}
\newcommand{\z}{\mathpzc{z}}
\newcommand{\TikZ}{Ti\textit{k}Z\xspace}
\usepackage{amsmath}
\usepackage{microtype}
\usepackage{smartdiagram}
\usepackage[utf8]{inputenc}
\usepackage[spanish]{babel}
\usepackage{listings}
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
\fancyhead[RO,LE]{Dise\~{n}o e Implementaci\'{o}n de Sistemas DSP en FPGA - \thepage}
%%\fancyhead[LO]{\nouppercase{\leftmark}}
%%\fancyhead[RE]{\nouppercase{\rightmark}}
%%\fancyfoot[C]{\thepage}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.0pt}
\usepackage{pslatex}
%\setlength{\topskip}{0mm}
%\setlength{\parindent}{0mm}

%% Footnotes
\setlength{\footnotesep}{12pt}
%% Captions
\usepackage[margin=10pt,font=small,labelfont=bf,labelsep=endash]{caption}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Abstract
Las plataformas reconfigurables basadas en Matriz de Compuertas Programables
 en Campo (FPGA) se han convertido en una solución muy conveniente para
 aplicaciones de alto rendimiento en el campo del Procesamiento Digital
 de Señales (DSP), sobre todo por la flexibilidad en el flujo de diseño,
 las altas frecuencias de operación que se pueden alcanzar y la baja potencia
 requerida por estos dispositivos.
 Sin embargo, al mismo tiempo que aumenta la complejidad de las aplicaciones
 que se pueden realizar en dichas plataformas, también lo hacen los conocimiento
s requeridos para poder garantizar una implementación exitosa.
 Esta investigación simplifica la conceptualización, modelado e implementación
 de sistemas DSP complejos, utilizando una metodología de diseño en alto
 nivel de abstracción basada en el uso de Matlab® y lenguajes de Descripción
 de Hardware (HDL), reduciendo así la curva de aprendizaje.
 A través del documento se presenta la elaboración de una arquitectura de
 un filtro de Respuesta al Impulso Finito (FIR), el cual elimina una componente
 no deseada en una señal senoidal, utilizando los vectores de simulación
 de Simulink®.
 
\end_layout

\begin_layout Abstract
Utilizando los mismos fundamentos de los filtros digitales, se desarrolló
 un filtro peine que realiza el efecto de agregar un retraso controlado
 a una señal de audio, el cual se exportó como bloque HDL y se incorporó
 a un sistema más grande con las interfaces para ejercitar dicho filtro
 en tiempo real, con audio extraído de un códec AC97.
\end_layout

\begin_layout Abstract
Por último, se describe un sistema de procesamiento de imagen utilizando
 el algoritmo del operador Sobel y los conceptos de las implementaciones
 anteriores, para encontrar los bordes de una imagen, ejecutando todas las
 operaciones necesarias en la FPGA, el cual arrojó resultados satisfactorios
 utilizando una cantidad de elementos lógicos relativamente minúscula.
\end_layout

\begin_layout Abstract
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_body
\end_document
